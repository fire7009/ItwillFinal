<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven>
		<message-converters>

			<beans:bean
				class="org.springframework.http.converter.StringHttpMessageConverter">

				<beans:property name="supportedMediaTypes">

					<beans:list>

						<beans:value>text/html; charset=UTF-8</beans:value>

					</beans:list>

				</beans:property>

			</beans:bean>



			<beans:bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">

				<beans:property name="supportedMediaTypes">

					<beans:list>

						<beans:value>application/json; charset=UTF-8</beans:value>

					</beans:list>

				</beans:property>

			</beans:bean>

		</message-converters>
	</annotation-driven>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- 파일 업로드 기능을 제공하는 클래스를 Spring Bean으로 등록 -->
	<!-- => beanName은 반드시 multipartResolver로 설정-->	
	<beans:bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
		<!-- maxUploadSize 필드에 업로드 파일의 용량 제한값(Byte)을 인젝션 처리 -->
		<beans:property name="maxUploadSize" value="20971520"/>
		<!-- defaultEncoding 필드에 입력값에 대한 캐릭터셋의 인코딩을 인젝션 처리 -->
		<beans:property name="defaultEncoding" value="UTF-8"/>
	</beans:bean>
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan
		base-package="com.js.pjt.controller" />
	<context:component-scan
		base-package="com.js.pjt.dao_daoimp" />
	<context:component-scan
		base-package="com.js.pjt.mapper" />
	<context:component-scan
		base-package="com.js.pjt.service_serviceimp" />
	<context:component-scan
		base-package="com.js.pjt.vo" />

	<beans:bean class="com.js.pjt.util.AdminAuthinterceptor" id="adminAuthinterceptor"/>
	<beans:bean class="com.js.pjt.util.LoginAuthInterceptor" id="loginAuthInterceptor"/>
	
	<interceptors>
		<interceptor>
			<mapping path="/"/>
			<mapping path="/notice"/>
			<mapping path="/unsong_insert"/>
			<beans:ref bean="loginAuthInterceptor"/>
		</interceptor>		
	</interceptors>


</beans:beans>
